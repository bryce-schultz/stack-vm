# Makefile auto generated by mk 2.0
#
# Targets:
# - main

# Compiler Options:
CXXC = g++
CC = gcc
CXXFLAGS = -Wall -Wextra -pedantic
CFLAGS = -Wall -Wextra -pedantic
LDFLAGS = -lm

# Target Executables:
MAIN_EXE = main

# Object Files:
MAIN_OBJS = main.o \
 LithiumCompiler.o \
 LithiumParser.o \
 IVisitor.o \
 HasVisitor.o \
 Token.o \
 Location.o \
 LithiumSymbolTable.o \
 SymbolTable.o \
 Error.o \
 LithiumTokenizer.o \
 GeneratorVisitor.o \
 Util.o

# Phony Targets:
.PHONY: all clean

# All Targets:
all: $(MAIN_EXE)

# Targets:
$(MAIN_EXE): $(MAIN_OBJS)
	$(CXXC) $(CXXFLAGS) $(MAIN_OBJS) -o $(MAIN_EXE) $(LDFLAGS)

# Clean:
clean:
	rm -f $(MAIN_EXE) $(MAIN_OBJS)

# Rules:
.cpp.o:
	$(CXXC) $(CXXFLAGS) -c $< -o $@
.c.o:
	$(CC) $(CFLAGS) -c $< -o $@

# Dependencies:
Location.o: Location.cpp Location.h
LithiumSymbolTable.o: LithiumSymbolTable.cpp LithiumSymbolTable.h \
 SymbolTable.h Symbol.h Token.h Location.h DeclNode.h StatementNode.h \
 Node.h IVisitor.h
HasVisitor.o: HasVisitor.cpp HasVisitor.h IVisitor.h Nodes.h Node.h \
 ProgramNode.h StatementsNode.h StatementNode.h ExpressionNode.h \
 BinaryExpressionNode.h NumericExpressionNode.h OperatorNode.h \
 IntExpressionNode.h UnaryExpressionNode.h PrintStatementNode.h \
 AsmStatementNode.h StringExpressionNode.h ConcatNode.h DeclNode.h \
 VarDeclNode.h Symbol.h Token.h Location.h LithiumSymbolTable.h \
 SymbolTable.h Error.h VariableExpressionNode.h AssignNode.h \
 ForStatementNode.h StatementListNode.h BlockNode.h WhileStatementNode.h \
 IfStatementNode.h FuncDeclNode.h ParamListNode.h ParamNode.h ArgNode.h \
 ArgListNode.h CallNode.h ReturnStatementNode.h
Util.o: Util.cpp Util.h
main.o: main.cpp LithiumCompiler.h LithiumParser.h Nodes.h Node.h \
 IVisitor.h ProgramNode.h StatementsNode.h StatementNode.h HasVisitor.h \
 ExpressionNode.h BinaryExpressionNode.h NumericExpressionNode.h \
 OperatorNode.h IntExpressionNode.h UnaryExpressionNode.h \
 PrintStatementNode.h AsmStatementNode.h StringExpressionNode.h \
 ConcatNode.h DeclNode.h VarDeclNode.h Symbol.h Token.h Location.h \
 LithiumSymbolTable.h SymbolTable.h Error.h VariableExpressionNode.h \
 AssignNode.h ForStatementNode.h StatementListNode.h BlockNode.h \
 WhileStatementNode.h IfStatementNode.h FuncDeclNode.h ParamListNode.h \
 ParamNode.h ArgNode.h ArgListNode.h CallNode.h ReturnStatementNode.h \
 LithiumTokenizer.h GeneratorVisitor.h
LithiumTokenizer.o: LithiumTokenizer.cpp LithiumTokenizer.h Token.h \
 Location.h Error.h
IVisitor.o: IVisitor.cpp IVisitor.h Nodes.h Node.h ProgramNode.h \
 StatementsNode.h StatementNode.h HasVisitor.h ExpressionNode.h \
 BinaryExpressionNode.h NumericExpressionNode.h OperatorNode.h \
 IntExpressionNode.h UnaryExpressionNode.h PrintStatementNode.h \
 AsmStatementNode.h StringExpressionNode.h ConcatNode.h DeclNode.h \
 VarDeclNode.h Symbol.h Token.h Location.h LithiumSymbolTable.h \
 SymbolTable.h Error.h VariableExpressionNode.h AssignNode.h \
 ForStatementNode.h StatementListNode.h BlockNode.h WhileStatementNode.h \
 IfStatementNode.h FuncDeclNode.h ParamListNode.h ParamNode.h ArgNode.h \
 ArgListNode.h CallNode.h ReturnStatementNode.h
LithiumParser.o: LithiumParser.cpp LithiumParser.h Nodes.h Node.h \
 IVisitor.h ProgramNode.h StatementsNode.h StatementNode.h HasVisitor.h \
 ExpressionNode.h BinaryExpressionNode.h NumericExpressionNode.h \
 OperatorNode.h IntExpressionNode.h UnaryExpressionNode.h \
 PrintStatementNode.h AsmStatementNode.h StringExpressionNode.h \
 ConcatNode.h DeclNode.h VarDeclNode.h Symbol.h Token.h Location.h \
 LithiumSymbolTable.h SymbolTable.h Error.h VariableExpressionNode.h \
 AssignNode.h ForStatementNode.h StatementListNode.h BlockNode.h \
 WhileStatementNode.h IfStatementNode.h FuncDeclNode.h ParamListNode.h \
 ParamNode.h ArgNode.h ArgListNode.h CallNode.h ReturnStatementNode.h \
 LithiumTokenizer.h Color.h
GeneratorVisitor.o: GeneratorVisitor.cpp GeneratorVisitor.h IVisitor.h \
 Symbol.h Token.h Location.h DeclNode.h StatementNode.h Node.h Nodes.h \
 ProgramNode.h StatementsNode.h HasVisitor.h ExpressionNode.h \
 BinaryExpressionNode.h NumericExpressionNode.h OperatorNode.h \
 IntExpressionNode.h UnaryExpressionNode.h PrintStatementNode.h \
 AsmStatementNode.h StringExpressionNode.h ConcatNode.h VarDeclNode.h \
 LithiumSymbolTable.h SymbolTable.h Error.h VariableExpressionNode.h \
 AssignNode.h ForStatementNode.h StatementListNode.h BlockNode.h \
 WhileStatementNode.h IfStatementNode.h FuncDeclNode.h ParamListNode.h \
 ParamNode.h ArgNode.h ArgListNode.h CallNode.h ReturnStatementNode.h
SymbolTable.o: SymbolTable.cpp SymbolTable.h Symbol.h Token.h Location.h \
 DeclNode.h StatementNode.h Node.h IVisitor.h
Error.o: Error.cpp Error.h Token.h Location.h Color.h
LithiumCompiler.o: LithiumCompiler.cpp LithiumCompiler.h LithiumParser.h \
 Nodes.h Node.h IVisitor.h ProgramNode.h StatementsNode.h StatementNode.h \
 HasVisitor.h ExpressionNode.h BinaryExpressionNode.h \
 NumericExpressionNode.h OperatorNode.h IntExpressionNode.h \
 UnaryExpressionNode.h PrintStatementNode.h AsmStatementNode.h \
 StringExpressionNode.h ConcatNode.h DeclNode.h VarDeclNode.h Symbol.h \
 Token.h Location.h LithiumSymbolTable.h SymbolTable.h Error.h \
 VariableExpressionNode.h AssignNode.h ForStatementNode.h \
 StatementListNode.h BlockNode.h WhileStatementNode.h IfStatementNode.h \
 FuncDeclNode.h ParamListNode.h ParamNode.h ArgNode.h ArgListNode.h \
 CallNode.h ReturnStatementNode.h LithiumTokenizer.h GeneratorVisitor.h \
 Util.h
Token.o: Token.cpp Token.h Location.h

# Options from .mk file:
CXXFLAGS += -g
MAIN_EXE = lic

