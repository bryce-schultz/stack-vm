#!/usr/bin/env bash

green='\033[0;32m'
red='\033[0;31m'
yellow='\033[0;33m'
blue='\033[0;34m'
strike='\033[9m'
nc='\033[0m'

build_args=$@

contains_clean()
{
    for arg in $build_args; do
        if [ $arg == "clean" ]; then
            return 0
        fi
    done

    return 1
}

# get the path of this file
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

cd $DIR

success()
{
    msg=$1
    echo -e "👉 ${green}${msg}${nc}"
}

test_passed()
{
    name=$1
    echo -e "👍 ${green}test suite ${name} passed${nc}"
}

test_failed()
{
    name=$1
    echo -e "👎 ${red}test suite ${name} failed${nc}"
}

failure()
{
    msg=$1
    echo -e "🤏 ${red}${strike}${msg}${nc}"
}

print_build_header()
{
    echo -e "${blue}Building${nc}"
}

print_test_header()
{
    echo -e "\n${blue}Running Tests${nc}"
}

build_target()
{
    target=$1

    cd src/$target
    make $build_args > /dev/null

    if [ $? -eq 0 ]; then
        success $target
    else
        failure $target
    fi

    cd $DIR
}

run_test()
{
    target=$1
    cd tests/$target
    make

    if [ $? -eq 0 ]; then
        test_passed $target
    else
        test_failed $target
    fi

    cd $DIR
}

print_build_header
build_target lic
build_target vm

if contains_clean; then
    exit 0
fi

print_test_header
run_test loops