# print a string
print("Hello World!\n");

# print a string with concatination
print("Hello" + " " + "World" + "!\n");

# inline assembly
asm("push 10");
asm("print");

print("\nThis string ❤️ 's you\n");

# write syscall example, write to stderr "Hi"
# write(fd, data, size)
# syscall(number, args)
# fd - param
# data - param
# size - param
# 1 - syscall number
# syscall - the actual call
#
# push 2 - fd (2 for stderr)
# push 10 - char (\n)
# push 105 - char (i)
# push 72 - char (H)
# push 3 - size (3)
# push 1 - write syscall number
# syscall
asm("push 2");
asm("push 2");
asm("push 10");
asm("push 105");
asm("push 72");
asm("push 3"); # -> should be pushed back on stack after syscall
asm("push 1");
asm("syscall");
asm("print");
print("\n");

print(-5! + 6);
print("\n");
asm("pop");

a = 20;
b = 100;

c = a + b;

print(c);
print("\n");

print(10 + a * 5);
print("\n");