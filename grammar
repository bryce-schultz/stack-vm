ASM = 'asm'
PRINT = 'print'
STRING = ".*"
NUMBER = [0-9]+\.?[0-9]*

program -> statements

statements -> statements statement
            | statement

statement -> asm_statement ;
           | print_statement ;
           | expression ;
           | declaration ;
           | if_statement
           | while_statement 
           | for_statement
           | block

while_statement -> WHILE ( numeric_expression ) block

for_statement -> FOR ( var_decl ; numeric_expression ; statement ) block

if_statement -> IF ( numeric_expression ) block
              | IF ( numeric_expression ) block ELSE block

block -> { statements }

asm_statement -> ASM ( string_expression )

print_statement -> PRINT ( expression )

expression -> numeric_expression
            | string_expression

declaration -> var_decl

var_decl -> IDENTIFIER = expression

string_expression -> string_expression + STRING
                   | string_expression + NUMBER
                   | STRING

numeric_expression -> addit

addit -> addit + term
       | addit - term
       | term

term -> term * exponent
      | term / exponent
      | exponent

exponent -> exponent ^ fact
          | fact

fact -> - factorial
      | factorial

factorial -> factorial !
           | primary

primary -> ( numeric_expression )
         | NUMBER
         | var_expr

var_expr -> IDENTIFIER

