ASM = 'asm'
PRINT = 'print'
STRING = ".*"
NUMBER = [0-9]+\.?[0-9]*

program -> statements

statements -> statement statements
            | nothing

statement -> single_statement ;     
           | block   
           | if_statement    
           | while_statement            
           | for_statement        
          
statement_list -> single_statement statement_list'

statement_list' -> , statement_list
                 | nothing

single_statement -> expression           
                  | print_statement      
                  | asm_statement

block -> { statements } 

if_statement -> IF ( numeric_expression ) statement if_statement'

if_statement' -> ELSE statement
               | nothing

while_statement -> WHILE ( numeric_expression ) statement

for_statement -> FOR ( statement_list ; numeric_expression ; statement_list ) statement

asm_statement -> ASM ( string_expression )

print_statement -> PRINT ( expression )

expression -> numeric_expression            
            | string_expression             

string_expression -> STRING string_expression'

string_expression' -> + expression string_expression'
                    | nothing

numeric_expression -> assignment

assignment -> optional assignment'

assignment': = optional assignment'
           | nothing

optional -> compound optional'

optional' -> || compound optional'
           | nothing

compound -> equality compound'

compound' -> && equality compound'
           | nothing

equality -> comparison equality'

equality' -> == comparison equality'
           | != comparison equality'
           | nothing

comparison -> addit comparison'

comparison' -> < addit comparison' 
             | > addit comparison' 
             | >= addit comparison' 
             | <= addit comparison' 
             | nothing 

addit -> term addit'

addit' -> + term
        | - term
        | nothing

term -> exponent term'

term' -> * exponent term'
       | / exponent term'
       | % exponent term'
       | nothing

exponent -> fact exponent'

exponent' -> ^ fact exponent'
           | nothing

fact -> - factorial      
      | factorial        

factorial -> modifier factorial'

factorial' -> ! factorial'
            | nothing

modifier -> primary modifier'

modifier' -> ++ modifier'
           | -- modifier'
           | nothing

primary -> ( numeric_expression )
         | NUMBER
         | IDENTIFIER
